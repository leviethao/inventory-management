[{"/Users/necvn/Documents/inventory-management/src/index.js":"1","/Users/necvn/Documents/inventory-management/src/App.js":"2","/Users/necvn/Documents/inventory-management/src/views/manage-import/Index.js":"3","/Users/necvn/Documents/inventory-management/src/views/manage-import/examples/LandingPage.js":"4","/Users/necvn/Documents/inventory-management/src/views/manage-import/examples/RegisterPage.js":"5","/Users/necvn/Documents/inventory-management/src/views/manage-import/examples/ProfilePage.js":"6","/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Footer/Footer.js":"7","/Users/necvn/Documents/inventory-management/src/views/manage-import/components/PageHeader/PageHeader.js":"8","/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Navbars/IndexNavbar.js":"9","/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Navbars/ExamplesNavbar.js":"10","/Users/necvn/Documents/inventory-management/src/views/manage-import/variables/charts.js":"11","/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Pagination.js":"12","/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Navbars.js":"13","/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Basics.js":"14","/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Typography.js":"15","/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/NucleoIcons.js":"16","/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Notifications.js":"17","/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Tabs.js":"18","/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Signup.js":"19","/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Download.js":"20","/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/JavaScript.js":"21","/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Examples.js":"22","/Users/necvn/Documents/inventory-management/src/views/manage-import/ManageImport.js":"23","/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Table/index.js":"24","/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Table/types.js":"25","/Users/necvn/Documents/inventory-management/src/views/manage-import/components/DebounceTextField/index.js":"26","/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Table/data.js":"27","/Users/necvn/Documents/inventory-management/src/views/manage-import/components/DebounceTextareaAutosize/index.js":"28","/Users/necvn/Documents/inventory-management/src/services/api/index.js":"29","/Users/necvn/Documents/inventory-management/src/config.js":"30"},{"size":144,"mtime":1645624492587,"results":"31","hashOfConfig":"32"},{"size":1619,"mtime":1645865902290,"results":"33","hashOfConfig":"32"},{"size":2167,"mtime":1645635613169,"results":"34","hashOfConfig":"32"},{"size":22849,"mtime":1645635498077,"results":"35","hashOfConfig":"32"},{"size":7843,"mtime":1645635518340,"results":"36","hashOfConfig":"32"},{"size":16841,"mtime":1645635537949,"results":"37","hashOfConfig":"32"},{"size":4181,"mtime":1646270592490,"results":"38","hashOfConfig":"32"},{"size":1577,"mtime":1645635443668,"results":"39","hashOfConfig":"32"},{"size":7336,"mtime":1646270528883,"results":"40","hashOfConfig":"32"},{"size":5825,"mtime":1607439708000,"results":"41","hashOfConfig":"32"},{"size":2991,"mtime":1607439708000,"results":"42","hashOfConfig":"32"},{"size":7228,"mtime":1607439708000,"results":"43","hashOfConfig":"32"},{"size":17509,"mtime":1607439708000,"results":"44","hashOfConfig":"32"},{"size":9790,"mtime":1607439708000,"results":"45","hashOfConfig":"32"},{"size":7740,"mtime":1607439708000,"results":"46","hashOfConfig":"32"},{"size":3660,"mtime":1607439708000,"results":"47","hashOfConfig":"32"},{"size":2517,"mtime":1607439708000,"results":"48","hashOfConfig":"32"},{"size":8415,"mtime":1607439708000,"results":"49","hashOfConfig":"32"},{"size":5638,"mtime":1607439708000,"results":"50","hashOfConfig":"32"},{"size":3754,"mtime":1607439708000,"results":"51","hashOfConfig":"32"},{"size":15646,"mtime":1607439708000,"results":"52","hashOfConfig":"32"},{"size":2135,"mtime":1607439708000,"results":"53","hashOfConfig":"32"},{"size":1855,"mtime":1646318491414,"results":"54","hashOfConfig":"32"},{"size":12728,"mtime":1646269695973,"results":"55","hashOfConfig":"32"},{"size":309,"mtime":1645968449753,"results":"56","hashOfConfig":"32"},{"size":985,"mtime":1645967558344,"results":"57","hashOfConfig":"32"},{"size":13852,"mtime":1646270184681,"results":"58","hashOfConfig":"32"},{"size":868,"mtime":1645962865015,"results":"59","hashOfConfig":"32"},{"size":164,"mtime":1645624492587,"results":"60","hashOfConfig":"32"},{"size":119,"mtime":1646318739439,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1m858vu",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/necvn/Documents/inventory-management/src/index.js",[],["126","127"],"/Users/necvn/Documents/inventory-management/src/App.js",["128"],"import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/css/nucleo-icons.css\";\nimport \"assets/scss/blk-design-system-react.scss?v=1.2.0\";\nimport \"assets/demo/demo.css\";\n\nimport Index from \"./views/manage-import/Index\";\nimport LandingPage from \"./views/manage-import/examples/LandingPage\";\nimport RegisterPage from \"./views/manage-import/examples/RegisterPage\";\nimport ProfilePage from \"./views/manage-import/examples/ProfilePage\";\nimport ManageImport from \"views/manage-import/ManageImport\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n\nconst App = () => {\n    return (\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <BrowserRouter>\n                <Switch>\n                <Route path=\"/\" render={(props) => <ManageImport {...props} />} />\n                <Route path=\"/components\" render={(props) => <Index {...props} />} />\n                <Route\n                    path=\"/landing-page\"\n                    render={(props) => <LandingPage {...props} />}\n                />\n                <Route\n                    path=\"/register-page\"\n                    render={(props) => <RegisterPage {...props} />}\n                />\n                <Route\n                    path=\"/profile-page\"\n                    render={(props) => <ProfilePage {...props} />}\n                />\n                {/* <Redirect from=\"/\" to=\"/components\" /> */}\n                </Switch>\n            </BrowserRouter>\n        </LocalizationProvider>\n    )\n}\nexport default App\n","/Users/necvn/Documents/inventory-management/src/views/manage-import/Index.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/examples/LandingPage.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/examples/RegisterPage.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/examples/ProfilePage.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Footer/Footer.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/components/PageHeader/PageHeader.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Navbars/IndexNavbar.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Navbars/ExamplesNavbar.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/variables/charts.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Pagination.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Navbars.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Basics.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Typography.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/NucleoIcons.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Notifications.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Tabs.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Signup.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Download.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/JavaScript.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/IndexSections/Examples.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/ManageImport.js",["129"],"/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Table/index.js",["130"],"import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport './styles.css'\nimport { headerList, dataList, options } from './data'\nimport DatePicker from '@mui/lab/DatePicker';\nimport TextField from '@mui/material/TextField';\nimport { OptionType, TableDataType } from './types'\nimport DebounceTextField from '../DebounceTextField';\nimport { Autocomplete, Button } from '@mui/material';\nimport DebounceTextareaAutosize from '../DebounceTextareaAutosize';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/RemoveCircle'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddCircleIcon from '@mui/icons-material/AddCircle'\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\nimport EditIcon from '@mui/icons-material/Edit'\nimport IconButton from '@mui/material/IconButton';\nimport moment from 'moment';\n\nconst headerListDefault = [...headerList]\nconst dataListDefault = [...dataList]\n\nconst Table = ({headerList = headerListDefault, dataList = dataListDefault, ...props}) => {\n    const [width, setWidth] = useState('100%')\n    const headerRef = useRef()\n    const [data, setData] = useState(dataList)\n\n    useEffect(() => {\n        const mappedData = dataList.map(cells => ({cells: cells, editing: false}))\n        setData(mappedData)\n    }, [dataList])\n\n    useEffect(() => {\n        const handleResize = () => {\n            if (headerRef.current?.scrollWidth) {\n            setWidth(headerRef.current?.scrollWidth)\n            }\n        }\n        \n        handleResize()\n\n        window.addEventListener('resize', handleResize)\n\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n    }, [headerList, setWidth])\n\n    const renderHeaderList = useCallback(() => {\n        return (\n            <div ref={headerRef} className='table-header'>\n                <div\n                    key={`table-header-item-#`}\n                    className='table-header-item'\n                >\n                    {'#'}\n                </div>\n                {headerList.map(item => (\n                    <div\n                        key={`table-header-item-${item.title}`}\n                        className='table-header-item'\n                        style={{width: item.width}}\n                    >\n                        {item.title}\n                    </div>\n                ))}\n            </div>\n        )\n    }, [headerList])\n\n    const onClickEditRow = useCallback((rowIndex) => {\n        return () => {\n            setData(x => {\n                let newData = [...x]\n                newData[rowIndex].editing = true\n                return newData\n            })\n        }\n    }, [])\n\n    const onClickSaveRow = useCallback((rowIndex) => {\n        return () => {\n            setData(x => {\n                let newData = [...x]\n                newData[rowIndex].editing = false\n                return newData\n            })\n        }\n    }, [])\n\n    const onClickDeleteRow = useCallback((rowIndex) => {\n        return () => {\n            setData(x => {\n                let newData = [...x]\n                newData.splice(rowIndex, 1)\n                return newData\n            })\n        }\n    }, [])\n\n    const onClickDeleteProduct = useCallback((rowIndex, cellIndex, productIndex) => {\n        return () => {\n            setData(x => {\n                let newData = [...x]\n                if (newData[rowIndex].cells[cellIndex].value) {\n                    newData[rowIndex].cells[cellIndex].value.splice(productIndex, 1)\n                }\n                return newData\n            })\n        }\n    }, [])\n\n    const onClickAddProduct = useCallback((rowIndex, cellIndex) => {\n        return () => {\n            setData(x => {\n                let newData = [...x]\n                if (newData[rowIndex].cells[cellIndex].value) {\n                    let productItem = {\n                        name: '',\n                        amount: 0,\n                        unit: 'KG',\n                        purity: 0,\n                        germination: 0,\n                        lot: ''\n                    }\n                    newData[rowIndex].cells[cellIndex].value.push(productItem)\n                }\n                return newData\n            })\n        }\n    }, [])\n\n    const renderCell = useCallback((rowIndex, cellIndex) => {\n        const cell = data[rowIndex].cells[cellIndex]\n\n        switch (cell.type) {\n            case TableDataType.Date:\n                if (data[rowIndex].editing) {\n                    return (\n                        <DatePicker\n                            label=\"Select a date\"\n                            value={cell.value}\n                            onChange={(newValue) => {\n                                setData(x => {\n                                    let newData = [...x]\n                                    newData[rowIndex].cells[cellIndex].value = newValue\n                                    return newData\n                                })\n                            }}\n                            renderInput={(params) => <TextField {...params} size='small' />}\n                        />\n                    )\n                }\n\n                return moment(cell.value).format('MM/DD/YYYY')\n            case TableDataType.Text:\n                if (data[rowIndex].editing) {\n                    return (\n                        <DebounceTextareaAutosize value={cell.value} onChange={(value) => {\n                            setData(x => {\n                                let newData = [...x]\n                                newData[rowIndex].cells[cellIndex].value = value\n                                return newData\n                            })\n                        }} />\n                    )\n                }\n\n                return cell.value\n            case TableDataType.Select:\n                if (data[rowIndex].editing) {\n                    return (\n                        <Autocomplete\n                            options={options[cell.optionType]}\n                            getOptionLabel={option => option.name}\n                            renderOption={(props, option) => {\n                                return (\n                                  <span {...props} style={{ color: '#000' }}>\n                                    {option.name}\n                                  </span>\n                                );\n                              }}\n                            sx={{ width: 200 }}\n                            renderInput={(params) => <TextField\n                                {...params}\n                                label=\"Select a value\"\n                                size='small'\n                            />}\n                        />\n                    )\n                }\n\n                return cell.value\n            case TableDataType.Custom.Product: {\n                let cellValues = cell.value || []\n                if (data[rowIndex].editing) {\n                    return (\n                        <div>\n                            {cellValues.map((item, valueIndex) => (\n                                <div style={{borderWidth: 1, borderColor: 'rgba(255, 255, 255, 0.16)', borderStyle: 'solid', borderRadius: 4, padding: 8, marginBottom: 8}}>\n                                    <DebounceTextField value={item.name} label='Product name' style={{width: '100%'}} />\n                                    <div style={{display: 'flex', justifyContent: 'space-between', marginTop: 8}}>\n                                        <DebounceTextField type='number' style={{width: '48%'}} label='Amount' />\n                                        <Autocomplete\n                                            style={{width: '48%'}}\n                                            options={options[OptionType.Unit]}\n                                            getOptionLabel={option => option.name}\n                                            renderOption={(props, option) => {\n                                                return (\n                                                <span {...props} style={{ color: '#000' }}>\n                                                    {option.name}\n                                                </span>\n                                                );\n                                            }}\n                                            sx={{ width: 200 }}\n                                            renderInput={(params) => <TextField\n                                                {...params}\n                                                label=\"Unit\"\n                                                size='small'\n                                            />}\n                                        />\n                                    </div>\n                                    \n                                    <div style={{display: 'flex', justifyContent: 'space-between', marginTop: 8}}>\n                                        <DebounceTextField type='number' style={{width: '48%'}} label='Purity' />\n                                        <DebounceTextField type='number' style={{width: '48%', fontSize: 12}} label='Germination' />\n                                    </div>\n                                    <div style={{display: 'flex', justifyContent: 'space-between', marginTop: 8}}>\n                                        <DebounceTextField value={item.name} label='Lot' style={{width: '48%'}} />\n                                        <Button startIcon={<RemoveIcon />} color='error' variant='contained' size='small' onClick={onClickDeleteProduct(rowIndex, cellIndex, valueIndex)}>\n                                            Remove\n                                        </Button>\n                                    </div>\n                                </div>\n                            ))}\n    \n                            <div style={{marginTop: cellValues.length ? 24 : 0, display: 'flex', width: '100%', justifyContent: 'center'}}>\n                                <Button startIcon={<AddIcon />} color='primary' variant='contained' size='small' onClick={onClickAddProduct(rowIndex, cellIndex)}>\n                                    Add Product\n                                </Button>\n                            </div>\n                        </div>\n                    )\n                }\n\n                return cellValues.map(value => value.name).join('\\n')\n            }\n            default: return cell.value\n        }\n    }, [data, onClickAddProduct, onClickDeleteProduct])\n\n    const renderDataList = useCallback(() => {\n        return (\n            <div className='table-content'>\n                {data.map((row, rowIndex) => (\n                    <div key={`table-row-${rowIndex}`} className='table-row'>\n                        <div key={`table-cell-#`} className='table-cell' style={{display: 'flex', justifyContent: 'center'}}>\n                            {`${rowIndex}`}\n                            <div style={{display: 'flex', justifyContent: 'center', position: 'absolute', width: '100%', marginTop: 16}}>\n                                <IconButton size='small' onClick={onClickDeleteRow(rowIndex)}>\n                                    <DeleteIcon />\n                                </IconButton>\n                                {row.editing ? (\n                                    <IconButton size='small' onClick={onClickSaveRow(rowIndex)}>\n                                        <CheckCircleIcon />\n                                    </IconButton>\n                                ) : (\n                                    <IconButton size='small' onClick={onClickEditRow(rowIndex)}>\n                                        <EditIcon />\n                                    </IconButton>\n                                )}\n                            </div>\n                        </div>\n                        {row?.cells?.map((cell, cellIndex) => (\n                            <div\n                                key={`table-cell-${cellIndex}`}\n                                className='table-cell'\n                                style={{width: headerList[cellIndex].width}}\n                            >\n                                {renderCell(rowIndex, cellIndex)}\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n        )\n    }, [data, headerList, onClickDeleteRow, onClickEditRow, onClickSaveRow, renderCell])\n\n    return (\n        <div className='table-container' style={{width: width}}>\n            {renderHeaderList()}\n            {renderDataList()}\n        </div>\n    )\n}\n  \nexport default Table\n  ","/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Table/types.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/components/DebounceTextField/index.js",["131"],"import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport _ from 'lodash'\nimport { Input } from 'reactstrap';\nimport { TextField } from '@mui/material';\n\nconst DebounceTextField = ({\n    value = '',\n    onChange = (text) => {},\n    type='text',\n    style,\n    size='small',\n    label=\"Select a value\"\n}) => {\n    const [text, setText] = useState('')\n\n    useEffect(() => {\n        setText(value)\n    }, [value])\n\n    const debounceOnChange = useRef(_.debounce((text) => {\n        onChange(text)\n    }, 300)).current\n    \n    const onChangeText = useCallback((event) => {\n        debounceOnChange(event.target.value)\n        setText(event.target.value)\n    }, [debounceOnChange])\n\n    return (\n        <TextField\n            defaultValue={text}\n            placeholder='Empty'\n            type={type}\n            onChange={onChangeText}\n            style={style}\n            label={label}\n            size={size}\n        />\n    )\n}\n\nexport default DebounceTextField","/Users/necvn/Documents/inventory-management/src/views/manage-import/components/Table/data.js",[],"/Users/necvn/Documents/inventory-management/src/views/manage-import/components/DebounceTextareaAutosize/index.js",[],"/Users/necvn/Documents/inventory-management/src/services/api/index.js",[],"/Users/necvn/Documents/inventory-management/src/config.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":40,"nodeType":"138","messageId":"139","endLine":2,"endColumn":48},{"ruleId":"136","severity":1,"message":"140","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":18},{"ruleId":"136","severity":1,"message":"141","line":13,"column":8,"nodeType":"138","messageId":"139","endLine":13,"endColumn":21},{"ruleId":"136","severity":1,"message":"142","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":15},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'PageHeader' is defined but never used.","'AddCircleIcon' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]